name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      working-directory: human-voice-ai-frontend
    
    - name: Run linting
      run: npm run lint
      working-directory: human-voice-ai-frontend
    
    - name: Run type checking
      run: npm run type-check
      working-directory: human-voice-ai-frontend
    
    - name: Run tests
      run: npm test -- --ci --coverage
      working-directory: human-voice-ai-frontend
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: human-voice-ai-frontend/coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    
    - name: Build Project Artifacts
      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
    
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
      if: github.ref == 'refs/heads/main'
