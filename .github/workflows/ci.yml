name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at midnight UTC
    - cron: '0 0 * * *'

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        os: [ubuntu-latest, macos-latest]
        exclude:
          # Exclude Python 3.11 on macOS due to some dependency issues
          - os: macos-latest
            python-version: '3.11'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev python3-pyaudio
    
    - name: Install Python dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # On macOS, we'll use --only-binary to avoid building from source
        python -m pip install --upgrade pip
        pip install -e .[dev] --only-binary :all:
    
    - name: Install Python dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        
    - name: Run linters
      run: |
        black --check src/ tests/ scripts/
        isort --check-only src/ tests/ scripts/
        flake8 src/ tests/ scripts/
        mypy src/ scripts/
        
    - name: Run tests
      run: |
        pytest -v --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
  deploy:
    name: Deploy to Production
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: human-voice-ai:latest
        
    - name: Deploy to production
      run: |
        # Add your deployment steps here
        echo "Deploying to production..."
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
